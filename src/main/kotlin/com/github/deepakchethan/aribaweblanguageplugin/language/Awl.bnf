{
  parserClass="com.github.deepakchethan.aribaweblanguageplugin.language.AWLParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Awl"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.deepakchethan.aribaweblanguageplugin.language.psi"
  psiImplPackage="com.github.deepakchethan.aribaweblanguageplugin.language.impl"

  elementTypeHolderClass="com.github.deepakchethan.aribaweblanguageplugin.language.psi.AWLTypes"
  elementTypeClass="com.github.deepakchethan.aribaweblanguageplugin.language.psi.AWLElementType"
  tokenTypeClass="com.github.deepakchethan.aribaweblanguageplugin.language.psi.AWLTokenType"
}

awl-file ::= item_*

private item_ ::= (tag | COMMENT | CRLF)

tag ::= tag-open | tag-close | tag-empty

private tag-open ::= '<' tag-name ws* attr-list? ws* '>'
private tag-empty ::= '<' tag-name ws* attr-list? ws* '/>'
private tag-close ::= '</' tag-name ws* '>'


private attr-list ::= (ws+ attr)*
private attr ::= (attr-empty | attr-unquoted | attr-single-quoted | attr-double-quoted)

private attr-empty ::= empty
private attr-unquoted ::= attr-name + equals + ws* attr-unquoted-value
private attr-single-quoted ::= attr-name + equals + ws* attr-single-quoted-value
private attr-double-quoted ::= attr-name + equals + ws* attr-double-quoted-value

private tag-name ::= (alphabet | digit)+
private attr-name ::= (digit | alphabet | special-character)+ ws* | empty

private attr-unquoted-value ::= (digit | alphabet | special-character)+
private attr-single-quoted-value ::= "\'" + attr-unquoted-value +  "\'"
private attr-double-quoted-value ::= "\"" + attr-unquoted-value +  "\""

private alphabet ::= lower-case-alphabet | higher-case-alphabet
private lower-case-alphabet ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
private higher-case-alphabet ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
private digit ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
private special-character ::= "*" | "$"
private ws ::= WHITE_SPACE
private empty ::= ''
private equals ::= "="
